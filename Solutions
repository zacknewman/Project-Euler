Problem 1.
Find the sum of all the multiples of 3 or 5 below 1000.
>>> sum_consec_numbers(3, 999//3, 3) + sum_consec_numbers(5, 999//5, 5) - sum_consec_numbers(15, 999//15, 15)
233168.0

Problem 2.
By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the sum of the even-valued terms.
>>> sum(filter(lambda x: x % 2 == 0, fib(4000000)))
4613732

Problem 3.
What is the largest prime factor of the number 600851475143?
>>> factorization(600851475143)[-1]
6857

Problem 4.
Find the largest palindrome made from the product of two 3-digit numbers.
>>> palindrome_product(3)
(993, 913, 906609)

Problem 5.
What is the smallest positive number that is evenly divisible by all of the numbers from 1 to 20?
>>> smallest_multiple(20)
232792560

Problem 6.
Find the difference between the sum of the squares of the first one hundred natural numbers and the square of the sum.
>>> sum_consec_numbers(101)**2 - sum_consec_squares(101)
25164150.0

Problem 7.
What is the 10001st prime number?
>>> prime_number(10000)
104743

Problem 8.
Find the thirteen adjacent digits in the below 1000-digit number that have the greatest product. What is the value of this product?

num =
7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843
8586156078911294949545950173795833195285320880551112540698747158523863050715693290963295227443043557
6689664895044524452316173185640309871112172238311362229893423380308135336276614282806444486645238749
3035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776
6572733300105336788122023542180975125454059475224352584907711670556013604839586446706324415722155397
5369781797784617406495514929086256932197846862248283972241375657056057490261407972968652414535100474
8216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586
1786645835912456652947654568284891288314260769004224219022671055626321111109370544217506941658960408
0719840385096245544436298123098787992724428490918884580156166097919133875499200524063689912560717606
0588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450

>>> digit_product(num, 13)
(5, 5, 7, 6, 6, 8, 9, 6, 6, 4, 8, 9, 5, 23514624000)

Problem 9.
There exists exactly one Pythagorean triplet for which a + b + c = 1000.
Find the product abc.
>>> product(pythagorean_triple_bound(1000))
31875000

Problem 10.
Find the sum of all the primes below two million.
>>> sum(prime_generator(2000000))
142913828922
